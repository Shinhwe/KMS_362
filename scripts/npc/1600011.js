importPackage(Packages.server);

var enter = "\r\n";
var seld = -1;

var need = 2438685,
    qty = 1;
var 선택필요 = 400000,
선택개수 = 30;

var range = 5; // 한줄에 몇개?

var dskin = [3010002, 3010003, 3010004, 3010005, 3010006, 3010010, 3010011, 3010012, 3010013, 3010014, 3010015, 3010016, 3010017, 3010019, 3010020, 3010022, 3010023, 3010024, 3010026, 3010028, 3010029, 3010030, 3010031, 3010032, 3010033, 3010034, 3010035, 3010036, 3010040, 3010041, 3010043, 3010044, 3010045, 3010046, 3010047, 3010048, 3010050, 3010051, 3010052, 3010053, 3010054, 3010056, 3010057, 3010058, 3010068, 3010069, 3010071, 3010072, 3010073, 3010074, 3010075, 3010077, 3010078, 3010079, 3010085, 3010093, 3010094, 3010095, 3010096, 3010098, 3010099, 3010100, 3010101, 3010102, 3010103, 3010104, 3010105, 3010106, 3010111, 3010112, 3010116, 3010117, 3010118, 3010119, 3010120, 3010121, 3010122, 3010123, 3010124, 3010125, 3010126, 3010127, 3010128, 3010135, 3010136, 3010137, 3010138, 3010139, 3010140, 3010141, 3010142, 3010143, 3010144, 3010145, 3010146, 3010148, 3010149, 3010151, 3010152, 3010155, 3010156, 3010161, 3010162, 3010164, 3010166, 3010168, 3010169, 3010170, 3010171, 3010172, 3010173, 3010174, 3010175, 3010177, 3010178, 3010179, 3010180, 3010181, 3010182, 3010183, 3010184, 3010185, 3010188, 3010189, 3010192, 3010193, 3010195, 3010196, 3010197, 3010200, 3010201, 3010212, 3010213, 3010214, 3010218, 3010219, 3010220, 3010222, 3010226, 3010227, 3010228, 3010229, 3010230, 3010231, 3010232, 3010233, 3010234, 3010235, 3010236, 3010237, 3010238, 3010239, 3010240, 3010241, 3010242, 3010243, 3010244, 3010245, 3010246, 3010247, 3010248, 3010249, 3010250, 3010251, 3010252, 3010253, 3010254, 3010255, 3010256, 3010258, 3010259, 3010260, 3010261, 3010262, 3010263, 3010264, 3010266, 3010267, 3010268, 3010269, 3010270, 3010271, 3010272, 3010273, 3010274, 3010275, 3010276, 3010277, 3010278, 3010281, 3010282, 3010283, 3010284, 3010285, 3010286, 3010287, 3010289, 3010290, 3010296, 3010299, 3010301, 3010302, 3010304, 3010306, 3010308, 3010311, 3010313, 3010323, 3010324, 3010325, 3010326, 3010327, 3010328, 3010329, 3010330, 3010331, 3010332, 3010333, 3010334, 3010335, 3010336, 3010337, 3010338, 3010339, 3010340, 3010341, 3010342, 3010343, 3010344, 3010345, 3010346, 3010347, 3010348, 3010349, 3010350, 3010351, 3010352, 3010353, 3010355, 3010357, 3010358, 3010359, 3010372, 3010378, 3010379, 3010380, 3010381, 3010382, 3010384, 3010385, 3010386, 3010387, 3010388, 3010389, 3010391, 3010392, 3010393, 3010394, 3010395, 3010396, 3010398, 3010399, 3010410, 3010412, 3010416, 3010417, 3010422, 3010424, 3010425, 3010427, 3010454, 3010462, 3010466, 3010467, 3010471, 3010472, 3010473, 3010490, 3010491, 3010492, 3010494, 3010495, 3010499, 3010511, 3010527, 3010529, 3010583, 3010591, 3010595, 3010602, 3010606, 3010607, 3010608, 3010609, 3010610, 3010615, 3010620, 3010631, 3010634, 3010635, 3010661, 3010663, 3010670, 3010686, 3010687, 3010688, 3010698, 3010699, 3010706, 3010707, 3010724, 3010725, 3010726, 3010727, 3010728, 3010732, 3010736, 3010737, 3010738, 3010747, 3010748, 3010749, 3010751, 3010752, 3010754, 3010755, 3010756, 3010758, 3010762, 3010763, 3010764, 3010765, 3010768, 3010769, 3010784, 3010785, 3010786, 3010787, 3010795, 3010807, 3010808, 3010809, 3010816, 3010817, 3010818, 3010819, 3010820, 3010821, 3010822, 3010823, 3010824, 3010825, 3010826, 3010827, 3010828, 3010829, 3010830, 3010831, 3010832, 3010833, 3010834, 3010839, 3010840, 3010841, 3010842, 3010843, 3010848, 3010849, 3010850, 3010853, 3010855, 3010856, 3010857, 3010858, 3010859, 3010860, 3010861, 3010864, 3010865, 3010880, 3010881, 3010882, 3010883, 3010884, 3010885, 3010886, 3010887, 3010888, 3010889, 3010890, 3010891, 3010892, 3010893, 3010894, 3010924, 3010925, 3010926, 3010927, 3010928, 3010929, 3010930, 3010931, 3010932, 3010933, 3010934, 3010937, 3010938, 3010939, 3010945, 3010947, 3010948, 3010953, 3010966, 3010967, 3010968, 3010969, 3010970, 3010971, 3010972, 3010973, 3010974, 3010981, 3010982, 3010983, 3010984, 3010985, 3010986, 3010987, 3012001, 3012002, 3012006, 3012007, 3012008, 3012009, 3012010, 3012011, 3015200, 3015201, 3015202, 3015203, 3015204, 3015205, 3015206, 3015207, 3015208, 3015209, 3015212, 3015213, 3015214, 3015215, 3015216, 3015217, 3015218, 3015219, 3015220, 3015224, 3015225, 3015237, 3015249, 3015250, 3015251, 3015253, 3015254, 3015255, 3015265, 3015266, 3015267, 3015268, 3015269, 3015270, 3015271, 3015283, 3015284, 3015285, 3015286, 3015287, 3015288, 3015289, 3015290, 3015291, 3015292, 3015293, 3015304, 3015328, 3015329, 3015338, 3015342, 3015343, 3015344, 3015347, 3015348, 3015349, 3015355, 3015356, 3015357, 3015358, 3015359, 3015360, 3015361, 3015362, 3015363, 3015364, 3015365, 3015366, 3015370, 3015371, 3015372, 3015374, 3015375, 3015376, 3015377, 3015378, 3015379, 3015396, 3015397, 3015398, 3015399, 3015417, 3015418, 3015436, 3015444, 3015445, 3015446, 3015449, 3015450, 3015452, 3015453, 3015458, 3015459, 3015460, 3015464, 3015465, 3015466, 3015467, 3015469, 3015470, 3015471, 3015482, 3015496, 3015497, 3015498, 3015499, 3015500, 3015501, 3015502, 3015503, 3015504, 3015505, 3015506, 3015507, 3015508, 3015509, 3015510, 3015511, 3015512, 3015513, 3015514, 3015524, 3015525, 3015526, 3015538, 3015539, 3015540, 3015541, 3015542, 3015543, 3015548, 3015549, 3015550, 3015551, 3015552, 3015553, 3015554, 3015555, 3015556, 3015557, 3015558, 3015559, 3015560, 3015561, 3015562, 3015573, 3015579, 3015580, 3015581, 3015582, 3015583, 3015588, 3015589, 3015590, 3015591, 3015592, 3015593, 3015594, 3015595, 3015596, 3015597, 3015598, 3015599, 3015600, 3015604, 3015605, 3015606, 3015607, 3015608, 3015609, 3015622, 3015627, 3015628, 3015629, 3015630, 3015631, 3015632, 3015635, 3015639, 3015640, 3015641, 3015647, 3015654, 3015659, 3015660, 3015661, 3015662, 3015665, 3015666, 3015668, 3015669, 3015670, 3015671, 3015672, 3015673, 3015674, 3015675, 3015676, 3015693, 3015694, 3015695, 3015696, 3015697, 3015698, 3015699, 3015700, 3015701, 3015702, 3015712, 3015713, 3015714, 3015715, 3015716, 3015717, 3015721, 3015722, 3015738, 3015739, 3015742, 3015743, 3015744, 3015752, 3015754, 3015755, 3015756, 3015757, 3015758, 3015759, 3015763, 3015771, 3015772, 3015773, 3015774, 3015775, 3015776, 3015777, 3015793, 3015794, 3015795, 3015796, 3015797, 3015799, 3015800, 3015805, 3015806, 3015807, 3015811, 3015814, 3015815, 3015816, 3015817, 3015818, 3015819, 3015824, 3015825, 3015826, 3015827, 3015832, 3015833, 3015834, 3015835, 3015836, 3015837, 3015838, 3015839, 3015840, 3015848, 3015849, 3015850, 3015863, 3015864, 3015866, 3015867, 3015876, 3015877, 3015878, 3015880, 3015881, 3015882, 3015883, 3015884, 3015885, 3015886, 3015887, 3015889, 3015898, 3015899, 3015901, 3015902, 3015903, 3015904, 3015913, 3015955, 3015956, 3015957, 3015958, 3016100, 3016101, 3016202, 3016203, 3016204, 3016205, 3017023, 3017024, 3017025, 3017034, 3017035, 3017036, 3018187, 3018146, 3018145, 3018144, 3018143, 3018142, 3018141, 3018140, 3018139, 3018138, 3018137, 3018136, 3018133, 3018132, 3018131, 3018130, 3018115, 3018114, 3018113, 3018112, 3018111, 3018091, 3018086, 3018085, 3018084, 3018083, 3018074, 3018066, 3018065, 3018064, 3018053, 3018052, 3018051, 3018050, 3018049, 3018039, 3018027, 3018026, 3018024, 3018007, 3018006, 3018005, 3018003, 3018002, 3017055, 3017054, 3017053, 3017052, 3017051, 3017050, 3017049, 3017048, 3017047, 3017046, 3017045, 3017044, 3015996, 3015994, 3015998, 3015991, 3015973, 3015972, 3015971, 3015970, 3015939, 3015938, 3015937, 3015916, 3015915, 3018037, 3018036, 3018035, 3018034, 3018225, 3018226, 3018227, 3018228, 3018229, 3018230, 3018234, 3018235, 3018245, 3018246, 3018247, 3018248, 3018259, 3018264, 3018265, 3018266, 3018267, 3018285, 3018286, 3018297, 3018298, 3018299, 3018300, 3018301, 3018302, 3018303];
dskin.sort(function (a, b) {
    return parseInt(a) - parseInt(b)
});

function start() {
    status = -1;
    action(1, 0, 0);
}

function action(mode, type, sel) {
    if (mode == 1) {
        status++;
    } else {
        cm.dispose();
        return;
    }
    if (status == 0) {
        var msg = "#fs14#해외의자 랜덤박스입니다." + enter + enter;

        msg += "◎  해외의자를 뽑는데 필요한 아이템" + enter;
        msg += "◎  랜덤 - #i" + need + "##z" + need + "# " + qty + "개" + enter;
        //msg += "◎  선택 - #i"+선택필요+"##z"+선택필요+"# "+선택개수+"개#b"+enter;

        msg += "#L1#무슨 해외의자가 나오나요?" + enter;
        msg += "#L2#랜덤 박스를 개봉할래요!";
        //msg += "#L3#선택 박스를 개봉할래요!";

        cm.sendSimple(msg);
    } else if (status == 1) {
        switch (sel) {
            case 1:
                var msg = "#fs14#다음과 같은 해외의자가 나옵니다. #fs14##b"
                for (i = 0; i < dskin.length; i++) {
                    if (i % range == 0) {
                        msg += "\r\n"
                    }
                    msg += "#i" + dskin[i] + "##z" + dskin[i] + "#";
                }
                cm.sendOk(msg);
                cm.dispose();
                break;
            case 2:
                if (!cm.haveItem(need, qty)) {
                    cm.sendOk("필요한 아이템이 부족하네요.");
                    cm.dispose();
                    return;
                }
                a = Randomizer.rand(0, (dskin.length - 1));
                cm.gainItem(need, -qty);
                cm.gainItem(dskin[a], 1);
                cm.sendOk("다음과 같은 아이템이 나왔습니다! #fs14##b" + enter + "#i" + dskin[a] + "##z" + dskin[a] + "#");
                cm.dispose();
                break;
            case 3:
                var msg = "원하시는 라이딩을 선택해주세요. #fs14##b"
                for (i = 0; i < dskin.length; i++) {
                    if (i % range == 0) {
                        msg += "\r\n"
                    }
                    msg += "#L" + i + "##i" + dskin[i] + "#"
                }
                cm.sendSimple(msg);
                break;
        }
    } else if (status == 2) {
        if (!cm.haveItem(선택필요, 선택개수)) {
            cm.sendOk("필요한 아이템이 부족하네요.");
            cm.dispose();
            return;
        }
        a = sel;
        cm.gainItem(선택필요, -선택개수);
        cm.gainItem(dskin[a], 1);
        cm.sendOk("다음과 같은 아이템이 나왔습니다! #fs14##b" + enter + "#i" + dskin[a] + "##z" + dskin[a] + "#");
        cm.dispose();
    }
}
